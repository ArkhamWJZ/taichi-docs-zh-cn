# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Yuanming Hu
# This file is distributed under the same license as the taichi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: taichi 0.5.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-17 18:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../type.rst:2
msgid "Type system"
msgstr ""

#: ../../type.rst:5
msgid "Supported types"
msgstr ""

#: ../../type.rst:6
msgid "Currently, supported basic types in Taichi are"
msgstr ""

#: ../../type.rst:8
msgid "int8 ``ti.i8``"
msgstr ""

#: ../../type.rst:9
msgid "int16 ``ti.i16``"
msgstr ""

#: ../../type.rst:10
msgid "int32 ``ti.i32``"
msgstr ""

#: ../../type.rst:11
msgid "int64 ``ti.i64``"
msgstr ""

#: ../../type.rst:12
msgid "uint8 ``ti.u8``"
msgstr ""

#: ../../type.rst:13
msgid "uint16 ``ti.u16``"
msgstr ""

#: ../../type.rst:14
msgid "uint32 ``ti.u32``"
msgstr ""

#: ../../type.rst:15
msgid "uint64 ``ti.u64``"
msgstr ""

#: ../../type.rst:16
msgid "float32 ``ti.f32``"
msgstr ""

#: ../../type.rst:17
msgid "float64 ``ti.f64``"
msgstr ""

#: ../../type.rst:20
msgid "Supported types on each backends:"
msgstr ""

#: ../../type.rst:23
msgid "type"
msgstr ""

#: ../../type.rst:23
msgid "CPU/CUDA"
msgstr ""

#: ../../type.rst:23
msgid "OpenGL"
msgstr ""

#: ../../type.rst:23
msgid "Metal"
msgstr ""

#: ../../type.rst:25
msgid "i8"
msgstr ""

#: ../../type.rst:25 ../../type.rst:27 ../../type.rst:29 ../../type.rst:31
#: ../../type.rst:33 ../../type.rst:35 ../../type.rst:37 ../../type.rst:39
#: ../../type.rst:41 ../../type.rst:43
msgid "OK"
msgstr ""

#: ../../type.rst:25 ../../type.rst:27 ../../type.rst:31 ../../type.rst:33
#: ../../type.rst:35 ../../type.rst:37 ../../type.rst:39 ../../type.rst:43
msgid "MISS"
msgstr ""

#: ../../type.rst:27
msgid "i16"
msgstr ""

#: ../../type.rst:29
msgid "i32"
msgstr ""

#: ../../type.rst:31
msgid "i64"
msgstr ""

#: ../../type.rst:31
msgid "EXT"
msgstr ""

#: ../../type.rst:33
msgid "u8"
msgstr ""

#: ../../type.rst:35
msgid "u16"
msgstr ""

#: ../../type.rst:37
msgid "u32"
msgstr ""

#: ../../type.rst:39
msgid "u64"
msgstr ""

#: ../../type.rst:41
msgid "f32"
msgstr ""

#: ../../type.rst:43
msgid "f64"
msgstr ""

#: ../../type.rst:46
msgid "(OK: supported, EXT: require extension, MISS: not supported)"
msgstr ""

#: ../../type.rst:49
msgid "Boolean types are represented using ``ti.i32``."
msgstr ""

#: ../../type.rst:51
msgid ""
"Binary operations on different types will give you a promoted type, "
"following the C programming language, e.g."
msgstr ""

#: ../../type.rst:53
msgid "``i32 + f32 = f32``"
msgstr ""

#: ../../type.rst:54
msgid "``f32 + f64 = f64``"
msgstr ""

#: ../../type.rst:55
msgid "``i32 + i64 = i64``"
msgstr ""

#: ../../type.rst:61
msgid "Default precisions"
msgstr ""

#: ../../type.rst:63
msgid ""
"By default, numerical literals have 32-bit precisions. For example, "
"``42`` has type ``ti.i32`` and ``3.14`` has type ``ti.f32``. Default "
"precisions can be specified when initializing Taichi:"
msgstr ""

#: ../../type.rst:77
msgid "Type casts"
msgstr ""

#: ../../type.rst:79
msgid "Use ``ti.cast`` to type-cast scalar values."
msgstr ""

