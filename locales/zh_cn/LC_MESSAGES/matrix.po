# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Yuanming Hu
# This file is distributed under the same license as the taichi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: taichi 0.5.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-20 23:40+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../matrix.rst:4
msgid "Matrices"
msgstr ""

#: ../../matrix.rst:6
msgid ""
"``ti.Matrix`` is for small matrices (e.g. `3x3`) only. If you have "
"`64x64` matrices, you should consider using a 2D tensor of scalars."
msgstr ""

#: ../../matrix.rst:7
msgid ""
"``ti.Vector`` is the same as ``ti.Matrix``, except that it has only one "
"column."
msgstr ""

#: ../../matrix.rst:8
msgid "Differentiate element-wise product ``*`` and matrix product ``@``."
msgstr ""

#: ../../matrix.rst:9
msgid ""
"``ti.Vector(n, dt=ti.f32)`` or ``ti.Matrix(n, m, dt=ti.f32)`` to create "
"tensors of vectors/matrices."
msgstr ""

#: ../../matrix.rst:10
msgid "``ti.transposed(A)`` or simply ``A.T()``"
msgstr ""

#: ../../matrix.rst:11
msgid "``ti.inverse(A)``"
msgstr ""

#: ../../matrix.rst:12
msgid "``ti.Matrix.abs(A)``"
msgstr ""

#: ../../matrix.rst:13
msgid "``ti.tr(A)``"
msgstr ""

#: ../../matrix.rst:14
msgid "``ti.determinant(A, type)``"
msgstr ""

#: ../../matrix.rst:15
msgid ""
"``ti.cross(a, b)``, where ``a`` and ``b`` are 3D vectors (i.e. ``3x1`` "
"matrices)"
msgstr ""

#: ../../matrix.rst:16
msgid "``A.cast(type)``"
msgstr ""

#: ../../matrix.rst:17
msgid "``R, S = ti.polar_decompose(A, ti.f32)``"
msgstr ""

#: ../../matrix.rst:18
msgid ""
"``U, sigma, V = ti.svd(A, ti.f32)`` (Note that ``sigma`` is a ``3x3`` "
"diagonal matrix)"
msgstr ""

#: ../../matrix.rst:20
msgid "TODO: doc here better like Vector. WIP"
msgstr ""

#: ../../matrix.rst:22
msgid "A matrix in Taichi can have two forms:"
msgstr ""

#: ../../matrix.rst:24
msgid ""
"as a temporary local variable. An ``n by m`` matrix consists of ``n * m``"
" scalar values."
msgstr ""

#: ../../matrix.rst:25
msgid ""
"as a an element of a global tensor. In this case, the tensor is an "
"N-dimensional array of ``n by m`` matrices."
msgstr ""

#: ../../matrix.rst:28
msgid "Declaration"
msgstr ""

#: ../../matrix.rst:31
msgid "As global tensors of matrices"
msgstr ""

#: ../../matrix.rst
msgid "Parameters"
msgstr ""

#: ../../matrix.rst:35
msgid "(scalar) the number of rows in the matrix"
msgstr ""

#: ../../matrix.rst:36
msgid "(scalar) the number of columns in the matrix"
msgstr ""

#: ../../matrix.rst:37
msgid "(DataType) data type of the components"
msgstr ""

#: ../../matrix.rst:38
msgid "(scalar or tuple) shape the tensor of vectors, see :ref:`tensor`"
msgstr ""

#: ../../matrix.rst:40
msgid "For example, this creates a 5x4 tensor of 3x3 matrices: ::"
msgstr ""

#: ../../matrix.rst:48
msgid ""
"In Python-scope, ``ti.var`` declares :ref:`scalar_tensor`, while "
"``ti.Matrix`` declares tensors of matrices."
msgstr ""

#: ../../matrix.rst:52 ../../matrix.rst:142
msgid "As a temporary local variable"
msgstr ""

#: ../../matrix.rst:56
msgid "(scalar) the first component of the vector"
msgstr ""

#: ../../matrix.rst:57
msgid "(scalar) the second component of the vector"
msgstr ""

#: ../../matrix.rst:59
msgid "For example, this creates a 3x1 matrix with components (2, 3, 4): ::"
msgstr ""

#: ../../matrix.rst:67
msgid "this is equivalent to ti.Vector([x, y, ...])"
msgstr ""

#: ../../matrix.rst:72
msgid "(scalar) the first component of the first row"
msgstr ""

#: ../../matrix.rst:73
msgid "(scalar) the second component of the first row"
msgstr ""

#: ../../matrix.rst:74
msgid "(scalar) the first component of the second row"
msgstr ""

#: ../../matrix.rst:75
msgid "(scalar) the second component of the second row"
msgstr ""

#: ../../matrix.rst:77
msgid ""
"For example, this creates a 2x2 matrix with components (2, 3) in the "
"first row and (4, 5) in the second row: ::"
msgstr ""

#: ../../matrix.rst:86
msgid "(vector) vector of elements forming first row (or column)"
msgstr ""

#: ../../matrix.rst:87
msgid "(vector) vector of elements forming second row (or column)"
msgstr ""

#: ../../matrix.rst:88
msgid "(vector) vector of elements forming third row (or column)"
msgstr ""

#: ../../matrix.rst:90
msgid ""
"For example, this creates a 3x3 matrix by concactinating vectors into "
"rows (or columns): ::"
msgstr ""

#: ../../matrix.rst:109
msgid "Accessing components"
msgstr ""

#: ../../matrix.rst:112
msgid "As global tensors of vectors"
msgstr ""

#: ../../matrix.rst:115
msgid "(tensor of matrices) the tensor of matrices"
msgstr ""

#: ../../matrix.rst:116
msgid "(scalar) index of the first tensor dimension"
msgstr ""

#: ../../matrix.rst:117
msgid "(scalar) index of the second tensor dimension"
msgstr ""

#: ../../matrix.rst:118 ../../matrix.rst:147
msgid "(scalar) row index of the matrix"
msgstr ""

#: ../../matrix.rst:119 ../../matrix.rst:148
msgid "(scalar) column index of the matrix"
msgstr ""

#: ../../matrix.rst:121
msgid "This extracts the first element in matrix ``a[6, 3]``: ::"
msgstr ""

#: ../../matrix.rst:132
msgid ""
"**Always** use two pair of square brackets to access scalar elements from"
" tensors of matrices."
msgstr ""

#: ../../matrix.rst:134
msgid ""
"The indices in the first pair of brackets locate the matrix inside the "
"tensor of matrices;"
msgstr ""

#: ../../matrix.rst:135
msgid ""
"The indices in the second pair of brackets locate the scalar element "
"inside the matrix."
msgstr ""

#: ../../matrix.rst:137
msgid ""
"For 0-D tensors of matrices, indices in the first pair of brackets should"
" be ``[None]``."
msgstr ""

#: ../../matrix.rst:146
msgid "(Matrix) the matrix"
msgstr ""

#: ../../matrix.rst:150
msgid ""
"For example, this extracts the element in row 0 column 1 of matrix ``a``:"
" ::"
msgstr ""

#: ../../matrix.rst:155
msgid "This sets the element in row 1 column 3 of ``a`` to 4: ::"
msgstr ""

#: ../../matrix.rst:161
msgid "Methods"
msgstr ""

