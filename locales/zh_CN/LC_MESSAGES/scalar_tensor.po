# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Yuanming Hu
# This file is distributed under the same license as the taichi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: taichi 0.5.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-28 16:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../scalar_tensor.rst:4
msgid "Tensors of scalars"
msgstr ""

#: ../../scalar_tensor.rst:8
msgid "Declaration"
msgstr ""

#: ../../scalar_tensor.rst
msgid "参数"
msgstr ""

#: ../../scalar_tensor.rst:12
msgid "(DataType) type of the tensor element"
msgstr ""

#: ../../scalar_tensor.rst:13
msgid "(optional, scalar or tuple) the shape of tensor"
msgstr ""

#: ../../scalar_tensor.rst:15
msgid ""
"For example, this creates a *dense* tensor with four ``int32`` as "
"elements: ::"
msgstr ""

#: ../../scalar_tensor.rst:18
msgid "x = ti.var(ti.i32, shape=4)"
msgstr ""

#: ../../scalar_tensor.rst:20
msgid "This creates a 4x3 *dense* tensor with ``float32`` elements: ::"
msgstr ""

#: ../../scalar_tensor.rst:23
msgid "x = ti.var(ti.f32, shape=(4, 3))"
msgstr ""

#: ../../scalar_tensor.rst:25
msgid ""
"If shape is ``()`` (empty tuple), then a 0-D tensor (scalar) is created: "
"::"
msgstr ""

#: ../../scalar_tensor.rst:28
msgid "x = ti.var(ti.f32, shape=())"
msgstr ""

#: ../../scalar_tensor.rst:30
msgid "Then access it by passing ``None`` as index: ::"
msgstr ""

#: ../../scalar_tensor.rst:33
msgid "x[None] = 2"
msgstr ""

#: ../../scalar_tensor.rst:35
msgid ""
"If shape is **not provided** or ``None``, the user must manually "
"``place`` it afterwards: ::"
msgstr ""

#: ../../scalar_tensor.rst:38
msgid ""
"x = ti.var(ti.f32)\n"
"ti.root.dense(ti.ij, (4, 3)).place(x)\n"
"# equivalent to: x = ti.var(ti.f32, shape=(4, 3))"
msgstr ""

#: ../../scalar_tensor.rst:44
msgid ""
"Not providing ``shape`` allows you to *place* the tensor as *sparse* "
"tensors, see :ref:`sparse` for more details."
msgstr ""

#: ../../scalar_tensor.rst:49
msgid ""
"All variables should be created and placed before any kernel invocation "
"or any of them accessed from python-scope. For example:"
msgstr ""

#: ../../scalar_tensor.rst:51
msgid ""
"x = ti.var(ti.f32)\n"
"x[None] = 1 # ERROR: x not placed!"
msgstr ""

#: ../../scalar_tensor.rst:56
msgid ""
"x = ti.var(ti.f32, shape=())\n"
"@ti.kernel\n"
"def func():\n"
"    x[None] = 1\n"
"\n"
"func()\n"
"y = ti.var(ti.f32, shape=())\n"
"# ERROR: cannot create tensor after kernel invocation!"
msgstr ""

#: ../../scalar_tensor.rst:67
msgid ""
"x = ti.var(ti.f32, shape=())\n"
"x[None] = 1\n"
"y = ti.var(ti.f32, shape=())\n"
"# ERROR: cannot create tensor after any tensor accesses from the Python-"
"scope!"
msgstr ""

#: ../../scalar_tensor.rst:76
msgid "Attribute"
msgstr ""

#: ../../scalar_tensor.rst:78
msgid "TODO: WIP"
msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

