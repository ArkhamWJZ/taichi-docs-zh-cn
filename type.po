# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Yuanming Hu
# This file is distributed under the same license as the taichi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: taichi 0.5.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-11 18:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../type.rst:2
msgid "Type system"
msgstr ""

#: ../../type.rst:5
msgid "Supported types"
msgstr ""

#: ../../type.rst:6
msgid "Currently, supported basic types in Taichi are"
msgstr ""

#: ../../type.rst:8
msgid "int32 ``ti.i32``"
msgstr ""

#: ../../type.rst:9
msgid "int64 ``ti.i64``"
msgstr ""

#: ../../type.rst:10
msgid "float32 ``ti.f32``"
msgstr ""

#: ../../type.rst:11
msgid "float64 ``ti.f64``"
msgstr ""

#: ../../type.rst:13
msgid "Boolean types are represented using ``ti.i32``."
msgstr ""

#: ../../type.rst:15
msgid ""
"Binary operations on different types will give you a promoted type, "
"following the C programming language, e.g."
msgstr ""

#: ../../type.rst:17
msgid "``i32 + f32 = f32``"
msgstr ""

#: ../../type.rst:18
msgid "``f32 + f64 = f64``"
msgstr ""

#: ../../type.rst:19
msgid "``i32 + i64 = i64``"
msgstr ""

#: ../../type.rst:25
msgid "Default precisions"
msgstr ""

#: ../../type.rst:27
msgid ""
"By default, numerical literals have 32-bit precisions. For example, "
"``42`` has type ``ti.i32`` and ``3.14`` has type ``ti.f32``. Default "
"precisions can be specified when initializing Taichi:"
msgstr ""

#: ../../type.rst:41
msgid "Type casts"
msgstr ""

#: ../../type.rst:43
msgid "Use ``ti.cast`` to type-cast scalar values."
msgstr ""

